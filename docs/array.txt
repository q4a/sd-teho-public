Составлено Warship, 02.08.09
Откопировл примеры, что выкладывал на форум, сделал комментарии

В скриптах игры довольно странная работа с массивами (тк недоделано)
Должно, а не работает (c)

Ниже примеры правильных и неправильных обьявлений массивов, что работает, а что нет.

=====

Нерабочий вариант №1

Глобальное объявление массива, элементы которого прописаны по #define - не работает!
Массив компилится без ошибок, но не инитится - все элементы при таком объявлении == 0
Пример:

int iSomeArray[3] = { GOOD_FOOD, GOOD_WEAPON, GOOD_MAHOGANY };

void SomeFunction()
{
	...
}

=====

Нераьочий вариант №2

Локальное объявление массива в функции, с присвоением значений его элементам.
Массив компилится с ошибками, при выполнении - ошибки.
Пример:

void SomeFunction()
{
	int someArray[3] = { 0, 5, 10 };
}

=====

Рабочий вариант №1

Глобальное объьявление массива, с присваиванием значений элементам.
Локально в функции не работает (пример выше), а глобально - работает!
Пример:

int iSomeArray[3] = { 0, 5, 10 };

void SomeFunction()
{
	...
}

=====

Рабочий вариант №2

Объявление массива без начального присваивания значений его элементам.
Значения присваиваются не сразу в объявлении, а ниже.
Работает и локально в функции и глобально.
Пример:

void SomeFunction()
{
	int someArray[3];
	someArray[0] = 0;
	someArray[1] = 5;
	someArray[2] = 10;
}

=====

Нерабочий вариант №3

Глобальное объявление массива без начального присваивания значений элементам.
Но ниже присваиваются значения, прописанные по #define - неработает!
Пример:

int someArray[3];
someArray[0] = GOOD_TOBACCO;
someArray[1] = GOOD_LEATHER;
someArray[2] = GOOD_PAPRIKA;

void SomeFunction()
{
	...
}

=====

Рабочий вариант №3

Локальное объявление массива, без присвоения начальных значений.
Глобально неработает (см. пример выше), а локально - работает!
Пример:

void SomeFunction()
{
	int someArray[3];
	someArray[0] = GOOD_TOBACCO;
	someArray[1] = GOOD_LEATHER;
	someArray[2] = GOOD_PAPRIKA;
}
